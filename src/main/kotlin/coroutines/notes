1.协程的概念
协程内顺序执行
全局协程想守护线程

2.基础
生命周期
创建  运行  正在完成   完成

取消    正在取消




创建
    runBlocking
    GlobalScope
    launch
    coroutineScope
      开启一个新协程，会阻塞当前协程，直到执行完成（包含内部子协程）,当协程的并发协程不影响

    async
     1.异步，有返回，可以使用懒启动（懒启动需要提前调用start，不然await才启动）
     2.立即启动，await会阻塞当前协程，直到有返回,类似join的效果。
     3.结构化并发,可以使用coroutineScope{}封装在一个方法中
    withContext
    withTimeout
    =========================
    0.父协程必须等所有子协程执行完才结束
    1.子协程，但创建多个协程，如果前面协程执行完后面协程会复用前面的协程
    2.launch与async，coroutineScope之间是并发，但coroutineScope会阻塞当前协程，一般在最后
    3.withContext，withTimeout，coroutineScope都会阻塞当前协程
    4.GlobalScope.launch与其他协程都是并发，且不会阻塞

取消
  协程的取消是协作的，必须有挂起函数才能取消，纯计算的无法取消
  取消是抛CancellationException异常，内部处理，不会抛出。
  1.cancelAndJoin()
  2.取消没有挂起函数的协程，添加yield(),isActive
  3.资源释放 try{ }finally{ }，如果finally存在耗时操作，使用withContext(NonCancellable){},会阻塞调用协程

超时
  withTimeout(){} 抛异常TimeoutCancellationException,可以使用捕获
  withTimeoutOrNull(){}

异常
调试
==================
运行
  join()
  挂起函数
  结构化并发
  协程上下（job，调度器）
  构建器

3.高级
Flow

Channel
